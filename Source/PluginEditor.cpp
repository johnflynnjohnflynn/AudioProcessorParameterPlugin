/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin editor.

  ==============================================================================
*/

#include "PluginProcessor.h"
#include "PluginEditor.h"


//==============================================================================
AudioProcessParameterPluginAudioProcessorEditor::AudioProcessParameterPluginAudioProcessorEditor (AudioProcessParameterPluginAudioProcessor& p)
    : AudioProcessorEditor (&p),
      boolLabel_  {"", "Bool"}, // (No component name, just set label text)
      floatLabel_ {"", "Float"},
      intLabel_   {"", "Int"},
      boolSlider_  {*p.getParameters()[boolName]},              // better way of getting param? public?!
      floatSlider_ {*p.getParameters()[floatName]},
      intSlider_   {*p.getParameters()[intName]},
      processor (p)
{
    addAndMakeVisible (boolSlider_);
    addAndMakeVisible (floatSlider_);
    addAndMakeVisible (intSlider_);
    
    addAndMakeVisible (boolLabel_);
    addAndMakeVisible (floatLabel_);
    addAndMakeVisible (intLabel_);

    // Make sure that before the constructor has finished, you've set the
    // editor's size to whatever you need it to be.
    const int numRows = p.getNumParameters();
    const int height = numRows * 48 + 24;
    setSize (512, height);
}

AudioProcessParameterPluginAudioProcessorEditor::~AudioProcessParameterPluginAudioProcessorEditor()
{
    // Sliders are ScopedPointer<Slider>s so deletes are handled
}

//==============================================================================
void AudioProcessParameterPluginAudioProcessorEditor::paint (Graphics& g)
{
    g.fillAll (Colours::lightgrey);
}

void AudioProcessParameterPluginAudioProcessorEditor::resized()
{
    // This is generally where you'll want to lay out the positions of any
    // subcomponents in your editor..

    boolSlider_ .setBounds (16, 32 + 0 * 48, 480, 24);  // obviously named constants
    floatSlider_.setBounds (16, 32 + 1 * 48, 480, 24);  // would be better here!
    intSlider_  .setBounds (16, 32 + 2 * 48, 480, 24);

    boolLabel_  .setBounds (16, 12 + 0 * 48, 480, 24);
    floatLabel_ .setBounds (16, 12 + 1 * 48, 480, 24);
    intLabel_   .setBounds (16, 12 + 2 * 48, 480, 24);

}
